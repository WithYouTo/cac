<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qcap.core.dao.ManagerMapper">


    <insert id="insertManagerRole" parameterType="com.qcap.core.model.ManagerRole">
        <selectKey keyProperty="id" resultType="String" order="BEFORE">
            select replace(uuid(),'-','') from dual
        </selectKey>
        INSERT INTO tb_manager_role
        (id_,managerId_,roleId_)
        values
        (#{id},#{managerid},#{roleid})
    </insert>

    <select id="getByAccount" parameterType="String" resultType="com.qcap.core.model.Manager">
        SELECT
          account_ account,
          name_ name,
          password_ password,
          salt_ salt
        FROM tb_manager
        WHERE
        account_ = #{account}
    </select>

    <select id="getRoleNameById" parameterType="String" resultType="String">
        SELECT
          a.name_ name
        FROM tb_role a
        left JOIN tb_manager_role b
        on a.num_ = b.roleId_
        WHERE
        b.managerId_ = #{id}
    </select>

    <select id="getByUserId" parameterType="String" resultType="com.qcap.core.model.Manager">
        SELECT
        id_ id,
        account_ account,
        name_ name,
        phone_ phone
        FROM tb_manager
        WHERE
        id_ = #{id}
    </select>


    <select id="selectUsers" resultType="map">
        select
        id_ id,
        account_ account,
        name_ name,
        phone_ phone,
        date_format(createtime_, '%Y-%m-%d %H:%i:%s') createtime,
        status_ status
        from tb_manager
        where status_ != 3
        <if test="name != null and name != ''">
            and (phone_ like CONCAT('%',#{name},'%')
            or account_ like CONCAT('%',#{name},'%')
            or name_ like CONCAT('%',#{name},'%'))
        </if>
        <if test="beginTime != null and beginTime != '' and endTime != null and endTime != ''">
            and (createTime_ between CONCAT(#{beginTime},' 00:00:00') and CONCAT(#{endTime},' 23:59:59'))
        </if>
    </select>

    <select id="listManager" resultType="com.qcap.core.poiEntity.ManagerPoiEntity">
        select
        id_ id,
        account_ account,
        password_ password,
        name_ name,
        phone_ phone,
        mail_ mail,
        createtime_ createtime,
        createemp_ createemp,
        updatetime_ updatetime,
        updateemp_ updateemp,
        status_ status
        from tb_manager
    </select>

    <select id="getRoleIdById"  parameterType="String" resultType="String">
        SELECT
        roleId_ roleId
        FROM tb_manager_role
        WHERE
        managerId_ = #{id}
    </select>
    
    <insert id="insertManager" parameterType="com.qcap.core.model.Manager">
        <selectKey keyProperty="id" resultType="String" order="BEFORE">
            select replace(uuid(),'-','') from dual
        </selectKey>
        INSERT INTO tb_manager
        (id_,account_,password_,salt_,name_,status_,phone_,createTime_)
        values
        (#{id},#{account},#{password},#{salt},#{name},#{status},#{phone},now())
    </insert>

    <insert id="insertManagerOrg" parameterType="com.qcap.core.model.ManagerOrg">
        <selectKey keyProperty="id" resultType="String" order="BEFORE">
            select replace(uuid(),'-','') from dual
        </selectKey>
        INSERT INTO tb_manager_org
        (id_,managerId_,orgId_)
        values
        (#{id},#{managerId},#{orgId})
    </insert>

    <update id="updateManager" parameterType="com.qcap.core.model.Manager">
        UPDATE tb_manager
        SET
        name_ = #{name},
        account_ = #{account},
        phone_ = #{phone}
        WHERE
        id_ = #{id}
    </update>

    <update id="updateStatus">
        UPDATE tb_manager
        SET
        status_ = #{code}
        WHERE
        id_ = #{id}
    </update>

    <update id="updateManagerPwd" parameterType="com.qcap.core.model.Manager">
        UPDATE tb_manager
        SET
            password_ = #{password},
            salt_ = #{salt}
        WHERE
        id_ = #{id}
    </update>

    <delete id="deleteRolesById">
        delete FROM tb_manager_role WHERE managerId_= #{id}
    </delete>

    <delete id="deleteOrgById" parameterType="String">
        delete FROM tb_manager_org WHERE managerId_= #{id}
    </delete>
</mapper>