<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qcap.core.dao.RoleMapper">

	<select id="getNewRoleNum" resultType="java.lang.Integer">
        SELECT MAX(NUM_ +1)  FROM tb_role
    </select>
    
	
    <insert id="insertRole" parameterType="com.qcap.core.model.Role">
        <selectKey keyProperty="id" resultType="String" order="BEFORE">
            select replace(uuid(),'-','') from dual
        </selectKey>
        INSERT INTO tb_role
        (id_,num_,pnum_,name_,remark_,status_,createTime_,companyCode_)
        values
        (#{id},#{num},#{pnum},#{name},#{remark},#{status},now(),#{companycode})
    </insert>

    <insert id="insertRoleMenu" parameterType="com.qcap.core.model.RoleMenu">
        <selectKey keyProperty="id" resultType="String" order="BEFORE">
            select replace(uuid(),'-','') from dual
        </selectKey>
        INSERT INTO tb_role_menu
        (id_,menuid_,rolenum_)
        values
        (#{id},#{menuid},#{rolenum})
    </insert>

    <select id="selectRoles" resultType="map">
        select
        id_ id,
        num_ num,
        pnum_ pnum,
        name_ name,
        remark_ remark,
        b.FULL_NAME_ companycode
        from tb_role a,
        tb_sys_company b
        where a.companyCode_=b.COMPANY_CODE_
        <if test="roleName != null">
            and a.name_ like CONCAT('%',#{roleName},'%')
        </if>
         <if test="companyCode != null">
            and a.companyCode_ like CONCAT('%',#{companyCode},'%')
        </if>
    </select>

    <select id="getById" parameterType="String" resultType="com.qcap.core.model.Role">
        select
        id_ id,
        num_ num,
        pnum_ pnum,
        name_ name,
        remark_ remark,
        companyCode_ companycode
        FROM tb_role
        WHERE
        id_ = #{id}
    </select>

    <select id="getByRoleNum" resultType="com.qcap.core.model.Role">
        select
        id_ id,
        num_ num,
        pnum_ pnum,
        name_ name,
        remark_ remark,
        companyCode_ companycode
        FROM tb_role
        WHERE
        num_ = #{rolenum}
    </select>
    
    <select id="getPname" parameterType="Integer" resultType="String">
        SELECT
        name_ name
        from tb_role
        WHERE
        num_ = #{pnum}
    </select>

    <select id="checkNum" resultType="String">
        SELECT
          name_ name
        from tb_role
        WHERE
        num_ = #{num}
    </select>

    <select id="roleTreeList" resultType="com.qcap.core.model.ZTreeNode">
        select
        num_ "id",
        pnum_ "pId",
        name_ as "name",
        (case when (pnum_=0 or pnum_ is null) then 'true' else 'false' end) "open"
        from tb_role
    </select>
    <!-- 根据companyCode 来加载角色 -->
    <select id="roleTreeListByCom" parameterType="String"  resultType="com.qcap.core.model.ZTreeNode">
        select
        num_ "id",
        pnum_ "pId",
        name_ as "name",
        (case when (pnum_=0 or pnum_ is null) then 'true' else 'false' end) "open"
        from tb_role
        where companyCode_=#{companyCode}
    </select>
    
    

    <select id="roleTreeListByRoleId" resultType="com.qcap.core.model.ZTreeNode">
        SELECT
        r.num_ "id",
        pnum_ "pId",
        NAME_ AS "name",
        (
        CASE
        WHEN (pnum_ = 0 OR pnum_ IS NULL) THEN
        'true'
        ELSE
        'false'
        END
        ) "open",
        (
        CASE
        WHEN (r1.num_ = 0 OR r1.num_ IS NULL) THEN
        'false'
        ELSE
        'true'
        END
        ) "checked"
        FROM
        tb_role r
        LEFT JOIN (
        SELECT
        num_
        FROM
        tb_role
        WHERE
        num_ IN

        <foreach collection="array" index="index" item="i" open="(" separator="," close=")">
            #{i}
        </foreach>

        ) r1 ON r.num_ = r1.num_
    </select>

    <select id="getByRoleId" resultType="com.qcap.core.model.Role">
        select
        id_ id,
        num_ num,
        pnum_ pnum,
        name_ name,
        remark_ remark,
        companyCode_ companycode
        FROM tb_role
        WHERE
        id_ = #{id}
    </select>


    <update id="updateById" parameterType="com.qcap.core.model.Role">
        UPDATE tb_role
        SET
        name_ = #{name},
        pnum_ = #{pnum}<!-- ,
        remark_ =#{remark},
        companyCode_ =#{companycode} -->
        WHERE
        id_ = #{id}
    </update>

    <delete id="deleteById">
        delete FROM tb_role WHERE id_= #{id}
    </delete>

    <delete id="deleteRolesByrolenum">
        delete FROM tb_role_menu WHERE rolenum_= #{num}
    </delete>
    
    <!-- 角色名称不可重复 -->
	<select id="selectExistNum" parameterType="java.util.Map" resultType="String">
        SELECT COUNT(*) FROM tb_role 
        WHERE 1 = 1   
        <if test="@com.qcap.core.utils.Ognl@isNotEmpty(name)">
			AND name_ = #{name}
		</if>
		<if test="@com.qcap.core.utils.Ognl@isNotEmpty(id)">
			AND id_ != #{id}
		</if>
    </select>
    

 <select id="roleTreeListByRoleIdAndCom" resultType="com.qcap.core.model.ZTreeNode">
  select id, pId,name,open,checked
	from 
        (SELECT
        r.num_ "id",
        pnum_ "pId",
        companyCode_ companyCode,
        NAME_ AS "name",
        (
        CASE
        WHEN (pnum_ = 0 OR pnum_ IS NULL) THEN
        'true'
        ELSE
        'false'
        END
        ) "open",
        (
        CASE
        WHEN (r1.num_ = 0 OR r1.num_ IS NULL) THEN
        'false'
        ELSE
        'true'
        END
        ) "checked"
        FROM
        tb_role r
        LEFT JOIN (
        SELECT
        num_
        FROM
        tb_role
        WHERE
        num_ IN

        <foreach collection="array" index="index" item="i" open="(" separator="," close=")">
            #{i}
        </foreach>

        ) r1 ON r.num_ = r1.num_ ) a
        where a.companyCode=#{companyCode}
    </select>

</mapper>