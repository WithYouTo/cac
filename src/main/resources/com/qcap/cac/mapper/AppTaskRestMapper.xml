<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qcap.cac.dao.AppTaskRestMapper">

	<select id="selectShiftType" parameterType="Map" resultType="String">
	SELECT DISTINCT SHIFT AS shift
	FROM tb_task_arrangement 
	WHERE EMPLOYEE_CODE =#{employeeCode}
	AND `MONTH` =#{monthNo}
	</select>

	<select id="selectShiftTime" parameterType="String" resultType="Map">
	SELECT DESC1_ AS startTime,DESC2_ AS endTime 
	FROM tbpubcode01 
	WHERE CONFIG_CODE_= 'SHIFT_TYPE' 
	AND DESC_ =#{shift}
	</select>

	<select id="queryTaskItem" parameterType="Map" resultType="Map">
	select COUNT(1) taskNum,CASE WHEN TASK_STATUS ='FINISH' THEN 'finishItem' 
	WHEN TASK_STATUS ='WAIT' THEN 'waitingItem' 
	WHEN TASK_STATUS ='WORKING' THEN 'workingItem' END AS taskItem
	FROM tb_task 
	WHERE TASK_STATUS !='CANCLE'
	AND CHECK_STATUS != 'DISQUALIFIED'
	AND START_TIME &gt;= #{startTime}
	AND START_TIME &lt; #{endTime}
	AND FIND_IN_SET(#{employeeCode},EMPLOYEE_CODE)
	AND END_TIME &gt;(CASE WHEN TASK_TYPE ='REGULAR' AND TASK_STATUS ='WAIT' THEN #{curTime} ELSE '1970-01-01 08:00:01' END)
	GROUP BY  TASK_STATUS
	UNION
	select COUNT(1), 'tempItem' 
	FROM tb_task 
	WHERE TASK_STATUS ='WAIT' 
	AND TASK_CODE LIKE 'T%' 
	AND START_TIME &gt;= #{startTime}
	AND START_TIME &lt; #{endTime}
	AND FIND_IN_SET(#{employeeCode},EMPLOYEE_CODE)
	UNION
	select COUNT(1), 'disqualifiedItem' 
	FROM tb_task 
	WHERE TASK_STATUS ='WAIT' 
	AND CHECK_STATUS != 'DISQUALIFIED'
	AND TASK_CODE LIKE 'DQ%' 
	AND START_TIME &gt;= #{startTime}
	AND START_TIME &lt; #{endTime}
	AND FIND_IN_SET(#{employeeCode},EMPLOYEE_CODE)
	</select>

<!-- 	<select id="queryTaskIntro" parameterType="com.qcap.cac.dto.AppTaskRestDto" resultType="Map">
	SELECT STANDARD_NAME AS standardName,TASK_CODE AS taskCode,
	CASE WHEN TASK_TYPE='TEMP' THEN '临时'
	WHEN TASK_TYPE='REGULAR' THEN '周期'
	WHEN TASK_TYPE='EVENT' THEN '事件'
	WHEN TASK_TYPE='SPECIAL' THEN '专项'
	END  AS taskType,
	CONCAT(DATE_FORMAT(START_TIME,'%H:%i'),'-',DATE_FORMAT(END_TIME,'%H:%i')) AS cleanTime,
	SPEC AS spec,TASK_SCORE AS taskScore, CHECK_FLAG AS checkFlag
	FROM tb_task WHERE FIND_IN_SET(#{employeeCode},EMPLOYEE_CODE)
	AND TASK_STATUS =#{taskStatus}
	</select> -->

	<select id="selectTaskIntro" parameterType="Map" resultType="Map">
		SELECT
		m.STANDARD_CODE standardCode,
		m.STANDARD_NAME standardName,
		m.TASK_CODE  AS  taskCode,
		m.TASK_TYPE  AS  taskType,
		m.CHECK_STATUS AS checkStatus,
		CASE WHEN m.CHECK_STATUS ='TOCHECK' THEN '待检查'
		WHEN m.CHECK_STATUS ='QUALIFIED' THEN '合格'
		WHEN m.CHECK_STATUS ='DISQUALIFIED' THEN '不合格'
		END AS checkStatusName,
		CONCAT(m.AREA_NAME,IFNULL(m.STANDARD_NAME,"")) AS taskName,
		CASE WHEN m.TASK_TYPE ='TEMP' THEN '临时'
		WHEN m.TASK_TYPE ='REGULAR' THEN '周期'
		WHEN m.TASK_TYPE ='EVENT' THEN '事件'
		WHEN m.TASK_TYPE ='SPECIAL' THEN '专项'
		END AS taskTypeName,
		CASE WHEN TASK_STATUS !='FINISH'
		THEN CONCAT(DATE_FORMAT(m.START_TIME,'%m-%d %H:%i'),'至',DATE_FORMAT(m.END_TIME,'%m-%d %H:%i'))
		ELSE CONCAT(DATE_FORMAT(m.START_WORK_TIME,'%m-%d %H:%i'),'至',DATE_FORMAT(m.COMPLETE_TIME,'%m-%d %H:%i'))
		END AS cleanTime,
		DATE_FORMAT(m.START_TIME,'%Y-%m-%d %T') AS startTime,
		IFNULL(m.SPEC,'') AS  spec,
		m.TASK_SCORE  AS  taskScore,
		m.CHECK_FLAG  AS  checkFlag,
		CASE WHEN m.CHECK_FLAG ='MUST' THEN '是'
		WHEN m.CHECK_FLAG ='OPTIONAL' THEN '否'
		END AS checkFlagName,
		m.UPLOAD_PIC_FLAG AS uploadPicFlag,
		m.START_SCAN_FLAG  AS  startScanFlag,
		m.END_SCAN_FLAG  AS  endScanFlag,
		m.TASK_PLAN_TIME AS taskPlanTime,
		CASE WHEN TASK_CODE LIKE 'DQ%' THEN CONCAT('AA',DATE_FORMAT(m.START_TIME,'%Y-%m-%d-%T'),m.LINE_NO)
		WHEN TASK_TYPE ='TEMP' THEN CONCAT('BB',DATE_FORMAT(m.START_TIME,'%Y-%m-%d-%T'),m.LINE_NO)
		WHEN TASK_TYPE ='EVENT' THEN CONCAT('CC',DATE_FORMAT(m.START_TIME,'%Y-%m-%d-%T'),m.LINE_NO)
		WHEN TASK_TYPE ='SPECIAL' THEN CONCAT('DD',DATE_FORMAT(m.START_TIME,'%Y-%m-%d-%T'),m.LINE_NO)
		WHEN TASK_TYPE ='REGULAR' THEN CONCAT('EE',DATE_FORMAT(m.START_TIME,'%Y-%m-%d-%T'),m.LINE_NO)
		END AS lineNo
		FROM tb_task m
		WHERE m.CHECK_STATUS != 'DISQUALIFIED'
		AND m.TASK_STATUS !='CANCLE'
		<if test="@com.qcap.cac.tools.Ognl@isNotEmpty(taskStatus)">
		AND m.TASK_STATUS = #{taskStatus}
		</if>
		<if test="@com.qcap.cac.tools.Ognl@isNotEmpty(employeeCode)">
		AND FIND_IN_SET(#{employeeCode},m.EMPLOYEE_CODE)
		</if>
		<if test="@com.qcap.cac.tools.Ognl@isNotEmpty(checkStatus)">
		AND m.CHECK_STATUS = #{checkStatus}
		</if>
        <if test=' @com.qcap.cac.tools.Ognl@isNotEmpty(type) and type == "HISTORY" '>
        AND m.END_TIME &lt;= #{endTime}
        </if>
        <if test=' type == "ITEM" or type == "FINISH" '>
        	 <if test="@com.qcap.cac.tools.Ognl@isNotEmpty(startTime) and @com.qcap.cac.tools.Ognl@isNotEmpty(endTime) ">
		        AND m.START_TIME &gt;= #{startTime}
		        AND m.START_TIME &lt; #{endTime}
	        </if>
	        AND END_TIME &gt;(CASE WHEN TASK_TYPE ='REGULAR'  AND TASK_STATUS ='WAIT'  THEN #{curTime} ELSE '1970-01-01 08:00:01' END)
        </if>
		 <if test=' @com.qcap.cac.tools.Ognl@isNotEmpty(type) and type == "CHECK" '>
		AND INSTR(#{areaCode},m.AREA_CODE)
        AND m.START_TIME &gt;= #{startTime}
        AND m.START_TIME &lt; #{endTime}
        </if>
        <if test='pageType == null or pageType =="" '>
	        <if test="@com.qcap.cac.tools.Ognl@isNotEmpty(lineNo)">
		        <!-- AND CONCAT(UNIX_TIMESTAMP(m.START_TIME),m.LINE_NO) &gt;CONCAT(UNIX_TIMESTAMP(#{startTimePage}),#{lineNo}) -->
		        	AND (CASE WHEN TASK_CODE LIKE 'DQ%' THEN CONCAT('AA',DATE_FORMAT(m.START_TIME,'%Y-%m-%d-%T'),m.LINE_NO)
						WHEN TASK_TYPE ='TEMP' THEN CONCAT('BB',DATE_FORMAT(m.START_TIME,'%Y-%m-%d-%T'),m.LINE_NO)
						WHEN TASK_TYPE ='EVENT' THEN CONCAT('CC',DATE_FORMAT(m.START_TIME,'%Y-%m-%d-%T'),m.LINE_NO)
						WHEN TASK_TYPE ='SPECIAL' THEN CONCAT('DD',DATE_FORMAT(m.START_TIME,'%Y-%m-%d-%T'),m.LINE_NO)
						WHEN TASK_TYPE ='REGULAR' THEN CONCAT('EE',DATE_FORMAT(m.START_TIME,'%Y-%m-%d-%T'),m.LINE_NO)
						END) &gt; #{lineNo}
	        </if>
        ORDER BY lineNo
        </if>
        <if test=' pageType =="queryHistory" '>
        	<if test="@com.qcap.cac.tools.Ognl@isNotEmpty(lineNo)  and  @com.qcap.cac.tools.Ognl@isNotEmpty(startTimePage) ">
		        AND CONCAT(UNIX_TIMESTAMP(m.START_TIME),m.LINE_NO) &lt;CONCAT(UNIX_TIMESTAMP(#{startTimePage}),#{lineNo})
	        </if>
        ORDER BY m.START_TIME DESC ,m.LINE_NO DESC
        </if>
        LIMIT 0,10
	</select>

	<select id="queryTaskDetail" parameterType="String" resultType="Map">
	SELECT
	m.STANDARD_CODE standardCode,
	m.STANDARD_NAME standardName,
	m.AREA_CODE  AS  areaCode,
	m.AREA_NAME  AS  areaName,
	m.TASK_CODE  AS  taskCode,
	m.TASK_TYPE  AS  taskType,
	m.TASK_STATUS  AS  taskStatus,
	CASE WHEN m.TASK_STATUS ='WAIT' THEN '未开始'
	WHEN m.TASK_STATUS ='WORKING' THEN '进行中'
	WHEN m.TASK_STATUS ='FINISH' THEN '已完成'
	WHEN m.TASK_STATUS ='CANCLE' THEN '已取消'
	END AS taskStatusName,
	m.EMPLOYEE_NAME AS employeeName,
	m.CHECK_STATUS AS checkStatus,
	m.TASK_IMG_URL AS taskImgUrl,
	CASE WHEN m.CHECK_STATUS ='TOCHECK' THEN '待检查'
	WHEN m.CHECK_STATUS ='QUALIFIED' THEN '合格'
	WHEN m.CHECK_STATUS ='DISQUALIFIED' THEN '不合格'
	END AS checkStatusName,
	CONCAT(m.AREA_NAME,IFNULL(m.STANDARD_NAME,"")) AS taskName,
	CASE WHEN m.TASK_TYPE ='TEMP' THEN '临时'
	WHEN m.TASK_TYPE ='REGULAR' THEN '周期'
	WHEN m.TASK_TYPE ='EVENT' THEN '事件'
	WHEN m.TASK_TYPE ='SPECIAL' THEN '专项'
	END AS taskTypeName,
	CONCAT(DATE_FORMAT(m.START_TIME,'%m-%d %H:%i'),'至',DATE_FORMAT(m.END_TIME,'%m-%d %H:%i')) AS cleanTime,
	DATE_FORMAT(m.START_TIME,'%Y-%m-%d %T') AS startTime,
	m.SPEC  AS  spec,
	m.TASK_SCORE  AS  taskScore,
	m.CHECK_FLAG  AS  checkFlag,
	CASE WHEN m.CHECK_FLAG ='MUST' THEN '是'
	WHEN m.CHECK_FLAG ='OPTIONAL' THEN '否'
	END AS checkFlagName,
	m.UPLOAD_PIC_FLAG AS uploadPicFlag,
	CASE WHEN m.UPLOAD_PIC_FLAG ='MUST' THEN '是'
	WHEN m.UPLOAD_PIC_FLAG ='OPTIONAL' THEN '否'
	END AS uploadPicFlagName,
	m.START_SCAN_FLAG  AS  startScanFlag,
    m.END_SCAN_FLAG  AS  endScanFlag,
	m.TASK_FINISH_DESC AS taskFinishDesc,
	m.TASK_ADVICE AS taskAdvice,
	m.FEEDBACK_IMG_URL AS feedBackImgUrl,
	m.CHECK_IMG_URL AS checkImgUrl
	FROM tb_task m LEFT JOIN tb_area_standard n
	ON m.STANDARD_CODE = n.STANDARD_CODE
	WHERE m.TASK_CODE = #{taskCode}
	</select>

	<update id="updateTask" parameterType="com.qcap.cac.dto.AppTaskUpdateReq" >
	    update tb_task
	    <set>
	      <if test="@com.qcap.cac.tools.Ognl@isNotEmpty(taskStatus)">
	        TASK_STATUS = #{taskStatus},
	      </if>
	      <if test="@com.qcap.cac.tools.Ognl@isNotEmpty(checkStatus)">
	        CHECK_STATUS = #{checkStatus},
	      </if>
	      <if test="@com.qcap.cac.tools.Ognl@isNotEmpty(taskScore)">
	        TASK_SCORE = #{taskScore},
	      </if>
	      <if test="@com.qcap.cac.tools.Ognl@isNotEmpty(taskAdvice)">
	        TASK_ADVICE = #{taskAdvice},
	      </if>
	      <if test="@com.qcap.cac.tools.Ognl@isNotEmpty(taskFinishDesc)">
	        TASK_FINISH_DESC = #{taskFinishDesc},
	      </if>
	      <if test="@com.qcap.cac.tools.Ognl@isNotEmpty(disqualifiedReason)">
	        DISQUALIFIED_REASON = #{disqualifiedReason},
	      </if>
	    	<if test="@com.qcap.cac.tools.Ognl@isNotEmpty(feedbackImgUrl)">
				FEEDBACK_IMG_URL = #{feedbackImgUrl},
			</if>
			<if test="@com.qcap.cac.tools.Ognl@isNotEmpty(checkImgUrl)">
				CHECK_IMG_URL = #{checkImgUrl},
			</if>
			<if test="@com.qcap.cac.tools.Ognl@isNotEmpty(employeeCode)">
				EMPLOYEE_CODE =#{employeeCode},
			</if>
			<if test="@com.qcap.cac.tools.Ognl@isNotEmpty(employeeName)">
				EMPLOYEE_NAME =#{employeeName},
			</if>
		      <if test="@com.qcap.cac.tools.Ognl@isNotEmpty(startWorkTime)">
		        START_WORK_TIME = #{startWorkTime},
		      </if>
		      <if test="@com.qcap.cac.tools.Ognl@isNotEmpty(completeTime)">
		        COMPLETE_TIME = #{completeTime},
		      </if>
		      <if test="@com.qcap.cac.tools.Ognl@isNotEmpty(checkTime)">
		        CHECK_TIME = #{checkTime},
		      </if>
		      <if test="@com.qcap.cac.tools.Ognl@isNotEmpty(checkEmpCode)">
		        CHECK_EMP_CODE = #{checkEmpCode},
		      </if>
		      <if test="@com.qcap.cac.tools.Ognl@isNotEmpty(checkEmpName)">
		        CHECK_EMP_NAME = #{checkEmpName},
		      </if>
	    </set>
	    where TASK_CODE = #{taskCode}
	</update>

	<select id="selectStandardDetailList" parameterType="String" resultType="Map">
	SELECT STANDARD_DETAIL_ID AS id, MATERIAL AS material 
	FROM tb_area_standard_detail 
	where STANDARD_CODE =#{standardCode}
	</select>

	<select id="selectStandardDetailInfo" parameterType="String" resultType="Map">
	SELECT
	m.STANDARD_DETAIL_ID  AS  standardDetailId,
	m.STANDARD_CODE  AS  standardCode,
	m.MATERIAL  AS  material,
	m.STANDARD_STEP  AS  standardStep,
	m.EQUITMET_TYPE  AS  equitmetType,
	m.CLEAN_TOOLS  AS  cleanTools,
	m.STANDARD_REQUIREMENT  AS  standardRequirement,
	m.IMG_URL  AS  imgUrl,
	m.FILE_URL  AS  fileUrl
	FROM tb_area_standard_detail m 
	where m.STANDARD_DETAIL_ID =#{standardDetailId}
	</select>

	<select id="selectAreaByPositionCode" parameterType="String" resultType="String">
		SELECT AREA_CODE AS areaCode
		FROM tb_area_position
		where POSITION_CODE = #{positionCode}
	</select>

	<select id="queryCheckTaskItem" parameterType="Map" resultType="Map">
		SELECT COUNT(1) taskNum,CASE WHEN CHECK_STATUS ='TOCHECK' THEN 'toCheckItem'
		WHEN CHECK_STATUS ='QUALIFIED' THEN 'checkedItem'  END AS taskItem
		FROM tb_task
		WHERE INSTR(#{areaCode},AREA_CODE)
		AND START_TIME &gt;= #{startTime}
		AND START_TIME &lt; #{endTime}
		AND CHECK_STATUS != 'DISQUALIFIED'
		AND TASK_STATUS ='FINISH'
		GROUP BY CHECK_STATUS
	</select>

	<select id="listTempTask" parameterType="com.qcap.cac.dto.AppTaskShiftHistoryRestReq" resultType="Map">
		SELECT
		m.AREA_NAME AS taskName,
		m.TASK_CODE  AS  taskCode,
		CONCAT(DATE_FORMAT(m.START_TIME,'%m-%d %H:%i'),'至',DATE_FORMAT(m.END_TIME,'%m-%d %H:%i')) AS cleanTime,
		m.SPEC  AS  spec,
		m.EMPLOYEE_NAME AS employeeName,
		m.TASK_STATUS AS taskStatus,
		CASE WHEN m.TASK_STATUS ='WAIT' THEN '未开始'
		WHEN m.TASK_STATUS ='WORKING' THEN '进行中'
		WHEN m.TASK_STATUS ='FINISH' THEN '已完成'
		WHEN m.TASK_STATUS ='CANCLE' THEN '已取消'
		END AS taskStatusName,
		m.LINE_NO  AS  lineNo
		FROM tb_task m
		WHERE m.CREATE_EMP = #{loginName}
		AND m.TASK_TYPE = 'TEMP'
		AND TASK_STATUS !='CANCLE'
		AND CHECK_STATUS !='DISQUALIFIED'
		<if test=' lineNo != null and lineNo !="" '>
		AND m.LINE_NO &gt; #{lineNo}
		</if>
		ORDER BY m.LINE_NO
		LIMIT 0,10
	</select>

	<select id="selectTaskByCode" parameterType="String" resultType="com.qcap.cac.entity.TbTask">
		SELECT
		m.TASK_ID  AS  taskId,
		m.PLAN_ID  AS  planId,
		m.TASK_TYPE  AS  taskType,
		m.POSITION_CODE  AS  positionCode,
		m.POSITION_NAME  AS  positionName,
		m.AREA_CODE  AS  areaCode,
		m.AREA_NAME  AS  areaName,
		m.STANDARD_CODE  AS  standardCode,
		m.STANDARD_NAME  AS  standardName,
		m.SHIFT  AS  shift,
		m.SPEC  AS  spec,
		m.PROGRAM_CODE AS programCode,
		m.EMPLOYEE_CODE  AS  employeeCode,
		m.EMPLOYEE_NAME  AS  employeeName,
		m.EMPLOYEE_TEL  AS  employeeTel,
		DATE_FORMAT(m.COMPLETE_TIME,'%Y-%m-%d %T') AS  completeTime,
		DATE_FORMAT(m.START_TIME,'%Y-%m-%d %T') AS  startTime,
		DATE_FORMAT(m.END_TIME,'%Y-%m-%d %T')  AS  endTime,
		m.TASK_STATUS  AS  taskStatus,
		m.CHECK_FLAG  AS  checkFlag,
		m.UPLOAD_PIC_FLAG  AS  uploadPicFlag,
		m.START_SCAN_FLAG  AS  startScanFlag,
    	m.END_SCAN_FLAG  AS  endScanFlag,
		m.REMARK1  AS  remark1,
		m.REMARK2  AS  remark2,
		m.REMARK3  AS  remark3,
		m.CREATE_EMP AS createEmp
		FROM tb_task m
		WHERE m.TASK_CODE  = #{taskCode}
	</select>

	<insert id="insertArrangeShift" parameterType="com.qcap.cac.entity.TbTaskArrangeShift" >
    insert into tb_task_arrange_shift (ARRANGE_SHIFT_ID, SHIFT, POSITION_CODE,
      POSITION_NAME, EMPLOYEE_CODE, EMPLOYEE_NAME,
      CHANGE_DATE, EXTRA_EMPLOYEE_CODE, EXTRA_EMPLOYEE_NAME,
      START_TIME, END_TIME, REMARK1,
      REMARK2, REMARK3, CREATE_EMP,
      CREATE_DATE, UPDATE_DATE, UPDATE_EMP,
      VERSION)
    values (#{arrangeShiftId}, #{shift}, #{positionCode},
      #{positionName}, #{employeeCode}, #{employeeName},
      #{changeDate,jdbcType=DATE}, #{extraEmployeeCode}, #{extraEmployeeName},
      #{startTime}, #{endTime}, #{remark1},
      #{remark2}, #{remark3}, #{createEmp},
      #{createDate}, #{updateDate}, #{updateEmp},
      #{version})
  </insert>

	<select id="selectArrangeShiftHistory" resultType="Map" parameterType="com.qcap.cac.dto.AppTaskShiftHistoryRestReq">
		SELECT
		m.ARRANGE_SHIFT_ID  AS  arrangeShiftId,
		m.SHIFT  AS  shift,
		(SELECT DESC1_ FROM tbpubcode01
			WHERE CONFIG_CODE_ ='SHIFT' AND DESC_ = m.SHIFT)AS shiftName,
		m.POSITION_CODE  AS  positionCode,
		m.POSITION_NAME  AS  positionName,
		m.EMPLOYEE_CODE  AS  employeeCode,
		m.EMPLOYEE_NAME  AS  employeeName,
		m.LINE_NO AS lineNo,
		DATE_FORMAT(m.CHANGE_DATE,'%Y-%m-%d') AS  changeDate,
		m.EXTRA_EMPLOYEE_CODE  AS  extraEmployeeCode,
		m.EXTRA_EMPLOYEE_NAME  AS  extraEmployeeName,
		DATE_FORMAT(m.START_TIME,'%Y-%m-%d %T')  AS  startTime,
		DATE_FORMAT(m.END_TIME,'%Y-%m-%d %T')  AS  endTime
		FROM tb_task_arrange_shift m
		WHERE m.CREATE_EMP = #{loginName}
		<if test=' lineNo != null and lineNo !="" '>
		AND m.LINE_NO &gt; #{lineNo}
		</if>
		ORDER BY m.LINE_NO
		LIMIT 0,10
	</select>

	<update id="updateCleanerTask" parameterType="com.qcap.cac.dto.AppTaskArrangeShiftRestReq">
		UPDATE tb_task
		SET
		EMPLOYEE_CODE = #{extraEmployeeCode},
		EMPLOYEE_NAME = #{extraEmployeeName},
		EMPLOYEE_TEL =  #{extraEmployeeTel}
		WHERE EMPLOYEE_CODE = #{employeeCode}
		AND START_TIME &gt;= #{startTimeStr}
		AND START_TIME &lt; #{endTimeStr}
	</update>

	<select id="selectIfTaskExist" parameterType="com.qcap.cac.dto.AppTaskCheckTaskRestReq" resultType="String">
	SELECT
	TASK_ID
	FROM tb_task
	where TASK_CODE =#{taskCode}
	AND  INSTR ((
			SELECT AREA_CODE
			FROM tb_area_position
			where POSITION_CODE =#{positionCode}
			<if test=' positionType != "3" '>
			AND POSITION_TYPE != 3 ) ,AREA_CODE)
			</if>
			<if test=' positionType == "3" '>
			AND POSITION_TYPE = 3 ) ,AREA_CODE)
			</if>
	</select>

	<select id="selectIfCleanerHaveTasks" parameterType="Map" resultType="String">
	SELECT
		TASK_CODE
	FROM
		tb_task
	WHERE
		INSTR(EMPLOYEE_CODE, #{employeeCode})
	AND START_TIME &gt;= #{startTime}
	AND START_TIME &lt; #{endTime}
	</select>

	  <insert id="insertTaskDelay" parameterType="com.qcap.cac.entity.TbTaskDelay" >
    insert into tb_task_delay (TASK_DELAY_ID, TASK_CODE, DELAY_DAYS, 
      OPERATION_DATE, REMARK1, REMARK2, 
      REMARK3, CREATE_EMP, CREATE_DATE, 
      UPDATE_DATE, UPDATE_EMP, VERSION
      )
    values (#{taskDelayId}, #{taskCode}, #{delayDays}, 
      #{operationDate}, #{remark1}, #{remark2}, 
      #{remark3}, #{createEmp}, #{createDate}, 
      #{updateDate}, #{updateEmp}, #{version}
      )
  </insert>

  <update id="updateSpecialTask" parameterType="Map">
  UPDATE tb_task SET
	START_TIME =#{startTime},
	END_TIME =#{endTime}
	WHERE TASK_TYPE ='SPECIAL'
	AND TASK_CODE =#{taskCode}
  </update>

  <select id="selectTaskTime" parameterType="String" resultType="Map">
	SELECT 
	DATE_FORMAT(START_TIME,'%Y-%m-%d %T') AS startTime,
	DATE_FORMAT(END_TIME,'%Y-%m-%d %T') AS endTime ,
	DATE_FORMAT(TASK_PLAN_TIME,'%Y-%m-%d %T') AS taskPlanTime 
	FROM tb_task 
	WHERE TASK_CODE =#{taskCode}
  </select>

  <select id="selectSpecialTaskTimeType" parameterType="String" resultType="String">
  SELECT n.PLAN_TIME_TYPE AS planTimeType FROM tb_task m LEFT JOIN tb_plan n
	ON m.PLAN_ID = n.PLAN_ID
	where TASK_CODE =#{taskCode}
  </select>
  
  <select id="selectEmployeeName" parameterType="String" resultType="String">
  SELECT `name` AS 'name'
	from tb_manager 
	where  account =#{employeeCode}
  </select>
  
  <select id="selectProgramCodeByEmployeeCode" parameterType="String" resultType="String">
    SELECT DISTINCT PROGRAM_CODE 
	from tb_task_arrangement
	WHERE EMPLOYEE_CODE =#{employeeCode}
	LIMIT 1
  </select>

</mapper>
